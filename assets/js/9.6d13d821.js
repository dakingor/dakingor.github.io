(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{153:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"android-studio-lint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#android-studio-lint","aria-hidden":"true"}},[t._v("#")]),t._v(" Android Studio Lint")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#lint"}},[t._v("Lint")])]),s("li",[s("a",{attrs:{href:"#lint的工作方式"}},[t._v("Lint的工作方式")])]),s("li",[s("a",{attrs:{href:"#lint检测"}},[t._v("Lint检测")])]),s("li",[s("a",{attrs:{href:"#lint的自定义检测范围"}},[t._v("Lint的自定义检测范围")])]),s("li",[s("a",{attrs:{href:"#忽略lint警告"}},[t._v("忽略Lint警告")]),s("ul",[s("li",[s("a",{attrs:{href:"#忽略java代码中的警告"}},[t._v("忽略Java代码中的警告")])]),s("li",[s("a",{attrs:{href:"#忽略xml中的警告"}},[t._v("忽略XML中的警告")])])])]),s("li",[s("a",{attrs:{href:"#lint的gradle配置"}},[t._v("Lint的Gradle配置")])]),s("li",[s("a",{attrs:{href:"#删除无用资源文件"}},[t._v("删除无用资源文件")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"lint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lint","aria-hidden":"true"}},[t._v("#")]),t._v(" Lint")]),t._v(" "),s("p",[t._v("Lint是最著名的C语言工具之一，是由贝尔实验室SteveJohnson于1979在PCC(PortableC Compiler)基础上开发的"),s("strong",[t._v("静态代码分析工具")]),t._v("。")]),t._v(" "),s("p",[t._v("Android Studio内置集成了Lint。使用它可帮助我们发现代码结构/质量问题，同时提供一些解决方案。")]),t._v(" "),s("h2",{attrs:{id:"lint的工作方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lint的工作方式","aria-hidden":"true"}},[t._v("#")]),t._v(" Lint的工作方式")]),t._v(" "),s("p",[t._v("Lint会根据预先配置的检测标准检查Android项目的源文件（包括Java文件、XML文件、图标以及ProGuard配置文件等），发现潜在的bug或可优化的地方。")]),t._v(" "),s("p",[t._v("可优化的内容主要包括：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Correctness：不够完美的编码，比如：硬编码、使用过时API等。")])]),t._v(" "),s("li",[s("p",[t._v("Performance：对性能有影响的编码，比如：静态引用、循环引用等")])]),t._v(" "),s("li",[s("p",[t._v("Internationalization：国际化、直接使用汉字、没有使用资源引用等。")])]),t._v(" "),s("li",[s("p",[t._v("Security：不安全的编码，比如：在WebView中允许使用JavaScriptInterface等。")])])]),t._v(" "),s("h2",{attrs:{id:"lint检测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lint检测","aria-hidden":"true"}},[t._v("#")]),t._v(" Lint检测")]),t._v(" "),s("p",[t._v("工具栏 -> Analyze -> Inspect Code，弹出Lint检测对话框，选定范围后点击“OK”即开始Lint检测。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/15408847342897/15408847720602.jpg",alt:"Lint检查范围-w398"}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Whole project：默认选项。检查整个项目。")])]),t._v(" "),s("li",[s("p",[t._v("Module 'app'：检查app模块。")])]),t._v(" "),s("li",[s("p",[t._v("Uncommitted files：检查未提交的文件。")])]),t._v(" "),s("li",[s("p",[t._v("Current File：检查当前窗口打开的文件。")])]),t._v(" "),s("li",[s("p",[t._v("Custom scope：自定义范围。")])]),t._v(" "),s("li",[s("p",[t._v("Include test sources：是否检查测试资源。")])])]),t._v(" "),s("h2",{attrs:{id:"lint的自定义检测范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lint的自定义检测范围","aria-hidden":"true"}},[t._v("#")]),t._v(" Lint的自定义检测范围")]),t._v(" "),s("p",[t._v("在Lint检测对话框中的“Custom scope”是自定义范围选项。其下有几个默认选项，也可以点击右边的“...”进行深度定制。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/15408847342897/15408847989648.jpg",alt:"Lint自定义检查范围-w368"}})]),t._v(" "),s("p",[t._v("深度定制检测范围的窗口，默认为空，可点击左上角的“+”新增一个检测范围。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/15408847342897/15408848176369.jpg",alt:"深度定制检测范围-w392"}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Local：只能当前项目使用。")])]),t._v(" "),s("li",[s("p",[t._v("Shared：其他项目也可使用。")])])]),t._v(" "),s("p",[t._v("点击“Local”，并创建一个名为LintCustomScopeDemo的检测范围项目。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/15408847342897/15408848332774.jpg",alt:"名为LintCustomScopeDemo的检测范围项目"}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Include：包括当前文件夹内的文件，但不包括他的子文件夹。")])]),t._v(" "),s("li",[s("p",[t._v("Include Recursively：包括当前文件夹以及它的子文件夹内所有的文件夹，递归添加。")])]),t._v(" "),s("li",[s("p",[t._v("Exclude：移除当前文件夹，不包括子文件夹。")])]),t._v(" "),s("li",[s("p",[t._v("Exclude Recursively：移除当前文件夹及所有子文件夹。")])])]),t._v(" "),s("h2",{attrs:{id:"忽略lint警告"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#忽略lint警告","aria-hidden":"true"}},[t._v("#")]),t._v(" 忽略Lint警告")]),t._v(" "),s("p",[t._v("Lint太“洁癖”了，报的某些警告是没必要的，这时我们可选择忽略这些警告。")]),t._v(" "),s("h3",{attrs:{id:"忽略java代码中的警告"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#忽略java代码中的警告","aria-hidden":"true"}},[t._v("#")]),t._v(" 忽略Java代码中的警告")]),t._v(" "),s("p",[t._v("忽略Lint警告的注解跟"),s("code",[t._v("@SuppressWarnings")]),t._v("很类似，"),s("code",[t._v('@SuppressLint("忽略的警告名称")')]),t._v("。")]),t._v(" "),s("p",[t._v("忽略Lint对使用新API的警告：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{attrs:{class:"token annotation punctuation"}},[t._v("@SuppressLint")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"NewApi"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("onCreate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Bundle savedInstanceState"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("super")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("onCreate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("savedInstanceState"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("若不清楚要忽略的警告名，则使用"),s("code",[t._v('@SuppressLint("all")')]),t._v("，当然其生效范围只是被"),s("code",[t._v("@SuppressLint")]),t._v("声明的当前类/方法/变量。")]),t._v(" "),s("h3",{attrs:{id:"忽略xml中的警告"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#忽略xml中的警告","aria-hidden":"true"}},[t._v("#")]),t._v(" 忽略XML中的警告")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("在XML中声明tools命名空间。"),s("code",[t._v('xmlns:tools="http://schemas.android.com/tools"')]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("使用"),s("code",[t._v('tools:ignore="要忽略的警告名"')]),t._v("。如"),s("code",[t._v('tools:ignore="all"')]),t._v("。")])])]),t._v(" "),s("h2",{attrs:{id:"lint的gradle配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lint的gradle配置","aria-hidden":"true"}},[t._v("#")]),t._v(" Lint的Gradle配置")]),t._v(" "),s("p",[t._v("可在Module的"),s("code",[t._v("build.gradle")]),t._v("中添加"),s("code",[t._v("lintOptions{}")]),t._v("来配置Lint的关键操作。")]),t._v(" "),s("div",{staticClass:"language-gradle line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("android {\n    ...\n    lintOptions {\n        // 不检测以下指定的问题\n        disable 'TypographyFractions', 'TypographyQuotes'\n        // 检测以下指定的问题。注意，这是对Lint默认检测问题的额外补充。\n        enable 'RtlHardcoded', 'RtlCompat', 'RtlEnabled'\n        // 只检测以下指定的问题。注意，此选项会覆盖掉disable和enable的配置。\n        check 'NewApi', 'InlineApi'\n        // 是否静默构建。若为true，则检测过程不输出报告。\n        quiet true\n        // 是否检测到error就停止构建，默认为true。\n        abortOnError false\n        // 是否忽略警告。若为true，则只会输出error日志。\n        ignoreWarnings true\n    }\n}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("h2",{attrs:{id:"删除无用资源文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除无用资源文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 删除无用资源文件")]),t._v(" "),s("p",[t._v("点击Android Studio工具栏 -> Analyze -> Run Inspection By Name...，输入要检测的内容，此处为"),s("strong",[t._v("Unused resources")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/15408847342897/15408848623098.jpg",alt:"Unused resources-w472"}})]),t._v(" "),s("p",[t._v("会检测出指定范围内的无用资源文件，再点击“Remove All Unused Resources”即可清理掉。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/15408847342897/15408848755580.jpg",alt:"无用资源文件-w1071"}})])])}],!1,null,null,null);e.options.__file="Android Studio Lint.md";a.default=e.exports}}]);