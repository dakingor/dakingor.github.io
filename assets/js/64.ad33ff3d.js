(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{208:function(s,t,a){"use strict";a.r(t);var n=a(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"函数的定义与调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数的定义与调用","aria-hidden":"true"}},[s._v("#")]),s._v(" 函数的定义与调用")]),s._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#函数调用"}},[s._v("函数调用")]),a("ul",[a("li",[a("a",{attrs:{href:"#命名参数"}},[s._v("命名参数")])]),a("li",[a("a",{attrs:{href:"#参数默认值"}},[s._v("参数默认值")])]),a("li",[a("a",{attrs:{href:"#可变参数"}},[s._v("可变参数")])]),a("li",[a("a",{attrs:{href:"#中辍调用"}},[s._v("中辍调用")])])])]),a("li",[a("a",{attrs:{href:"#顶层函数和属性"}},[s._v("顶层函数和属性")]),a("ul",[a("li",[a("a",{attrs:{href:"#顶层函数"}},[s._v("顶层函数")])]),a("li",[a("a",{attrs:{href:"#顶层属性"}},[s._v("顶层属性")])])])]),a("li",[a("a",{attrs:{href:"#扩展函数和属性"}},[s._v("扩展函数和属性")]),a("ul",[a("li",[a("a",{attrs:{href:"#扩展函数"}},[s._v("扩展函数")])]),a("li",[a("a",{attrs:{href:"#导入扩展函数"}},[s._v("导入扩展函数")])]),a("li",[a("a",{attrs:{href:"#从java中调用扩展函数"}},[s._v("从Java中调用扩展函数")])]),a("li",[a("a",{attrs:{href:"#扩展函数不可重写"}},[s._v("扩展函数不可重写")])]),a("li",[a("a",{attrs:{href:"#扩展属性"}},[s._v("扩展属性")])])])])])]),a("p"),s._v(" "),a("h2",{attrs:{id:"函数调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数调用","aria-hidden":"true"}},[s._v("#")]),s._v(" 函数调用")]),s._v(" "),a("h3",{attrs:{id:"命名参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名参数","aria-hidden":"true"}},[s._v("#")]),s._v(" 命名参数")]),s._v(" "),a("p",[s._v("当调用一个Kotlin定义的函数时，可以显式地标明一些参数的名称。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("/* 集合的格式化输出 */")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("fun")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("<")]),s._v("T"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("joinToString")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    collection"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" Collection"),a("span",{attrs:{class:"token operator"}},[s._v("<")]),s._v("T"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    separator"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("// 分隔符")]),s._v("\n    prefix"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("// 前缀")]),s._v("\n    postfix"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String "),a("span",{attrs:{class:"token comment"}},[s._v("// 后缀")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("..")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("val")]),s._v(" str "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("joinToString")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("collection"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('""')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('""')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('""')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("// 利用命名参数来增强可读性")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("val")]),s._v(" str "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("joinToString")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("collection"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" separator "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('""')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prefix "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('""')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" postfix "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('""')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果在调用一个函数时，指明了一个函数的名称，为了避免混淆，那它之后的所有参数都需要标明名称。")]),s._v(" "),a("h3",{attrs:{id:"参数默认值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数默认值","aria-hidden":"true"}},[s._v("#")]),s._v(" 参数默认值")]),s._v(" "),a("p",[s._v("在Kotlin中，可以在声明函数的时候，指定参数的默认值。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("fun")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("<")]),s._v("T"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("joinToString")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    collection"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" Collection"),a("span",{attrs:{class:"token operator"}},[s._v("<")]),s._v("T"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    separator"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('", "')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    prefix"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('""')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    postfix"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('""')]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("..")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("可以用所有参数来调用这个函数，或者省略掉部分参数。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("val")]),s._v(" str1 "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("joinToString")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("collection"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('", "')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('""')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('""')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("val")]),s._v(" str2 "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("joinToString")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("collection"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("val")]),s._v(" str3 "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("joinToString")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("collection"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"; "')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("当使用常规的调用语法时，必须按照函数声明中定义的参数顺序类给定参数，可以省略的只有排在末尾的参数。如果使用命名参数，可以省略中间的一些参数，也可以以你想要的任意顺序只给定你需要的参数。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("val")]),s._v(" str "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("joinToString")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("collection"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" postfix "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"]"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" suffix "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"["')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("注意，参数的默认值是被编码到被调用的函数中，而不是调用的地方。")]),s._v(" "),a("p",[s._v("Java没有参数默认值的概念，当你从Java中调用Kotlin函数的时候，必须显式地指定所有参数值。可以用"),a("code",[s._v("@JvmOverloads")]),s._v("注解Kotlin函数，指示编译器生成Java重载函数，方便Java调用。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token annotation builtin"}},[s._v("@JvmOverloads")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("fun")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("<")]),s._v("T"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("joinToString")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    collection"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" Collection"),a("span",{attrs:{class:"token operator"}},[s._v("<")]),s._v("T"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    separator"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('", "')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    prefix"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('""')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    postfix"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('""')]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("..")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("String "),a("span",{attrs:{class:"token function"}},[s._v("joinToString")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Collection"),a("span",{attrs:{class:"token generics function"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("T"),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" collection"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" String separator"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" String prefix"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" String postfix"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nString "),a("span",{attrs:{class:"token function"}},[s._v("joinToString")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Collection"),a("span",{attrs:{class:"token generics function"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("T"),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" collection"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" String separator"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" String prefix"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nString "),a("span",{attrs:{class:"token function"}},[s._v("joinToString")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Collection"),a("span",{attrs:{class:"token generics function"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("T"),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" collection"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" String separator"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nString "),a("span",{attrs:{class:"token function"}},[s._v("joinToString")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Collection"),a("span",{attrs:{class:"token generics function"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("T"),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" collection"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("因此，在Kotlin中，为函数的参数设置默认值，可以避免创建重载的函数。")]),s._v(" "),a("h3",{attrs:{id:"可变参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可变参数","aria-hidden":"true"}},[s._v("#")]),s._v(" 可变参数")]),s._v(" "),a("p",[s._v("使用"),a("code",[s._v("vararg")]),s._v("修饰的参数是可变参数，可以接受任意个数的参数。例如，调用"),a("code",[s._v("listOf")]),s._v("函数并传入若干个元素来创建一个列表。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("fun")]),s._v(" listOf"),a("span",{attrs:{class:"token operator"}},[s._v("<")]),s._v("T"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("vararg")]),s._v(" values"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" T"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" List"),a("span",{attrs:{class:"token operator"}},[s._v("<")]),s._v("T"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("..")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("val")]),s._v(" list "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("listOf")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("3")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("5")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("7")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Kotlin的可变参数与Java的区别是：当需要传递给可变参数的实参已经包装在数组中时，Java可按原样传递数组，而Kotlin则要求你显式地解包数组，以便每个数组元素在函数中能作为单独的参数来调用。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("val")]),s._v(" numbers "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("arrayOf")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("3")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("5")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("7")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("// 创建一个数组")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("val")]),s._v(" list "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("listOf")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token operator"}},[s._v("*")]),s._v("numbers"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("// 使用展开运算符*来解包数组")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"中辍调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中辍调用","aria-hidden":"true"}},[s._v("#")]),s._v(" 中辍调用")]),s._v(" "),a("p",[s._v("函数调用的格式为："),a("code",[s._v("目标对象名.函数名(参数)")]),s._v("，而中辍调用的格式为："),a("code",[s._v("目标对象名 函数名 参数")]),s._v("。")]),s._v(" "),a("p",[s._v("无论是普通函数还是扩展函数，要允许使用中辍调用，需要使用"),a("code",[s._v("infix")]),s._v("修饰符来标记它。例如，Kotlin标准库中的"),a("code",[s._v("to")]),s._v("函数。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("infix")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("fun")]),s._v(" Any"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("to")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("other"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" Any"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("Pair")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("this")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" other"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("// 创建一个键值对")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("to")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"one"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("// 普通调用")]),s._v("\n"),a("span",{attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("to")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"one"')]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("// 中辍调用")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"顶层函数和属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顶层函数和属性","aria-hidden":"true"}},[s._v("#")]),s._v(" 顶层函数和属性")]),s._v(" "),a("h3",{attrs:{id:"顶层函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顶层函数","aria-hidden":"true"}},[s._v("#")]),s._v(" 顶层函数")]),s._v(" "),a("p",[s._v("在Java中有很多这样的类，它不包含任何的状态或者实例函数，而是仅仅作为一堆静态函数的容器。例如，JDK中的"),a("code",[s._v("Collections")]),s._v("类，实际项目开发中的那些以"),a("code",[s._v("Util")]),s._v("作为后缀命名的工具类。")]),s._v(" "),a("p",[s._v("在Kotlin中，根本就不需要去创建这些无意义的类，可以把这些函数直接放在代码文件的顶层，不从属于任何的类。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("/* join.kt */")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("package")]),s._v(" strings\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("fun")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("joinToString")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token operator"}},[s._v("..")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("..")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("这些顶层函数依然是包内的成员，如果需要从包外访问它，则需要"),a("code",[s._v("import")]),s._v("。")]),s._v(" "),a("p",[s._v("Kotlin中的顶层函数会被编译成一个类的静态函数，而这个类默认为包含该顶层函数的文件的名称。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("package")]),s._v(" strings"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{attrs:{class:"token class-name"}},[s._v("JoinKt")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("static")]),s._v(" String "),a("span",{attrs:{class:"token function"}},[s._v("joinToString")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("可在Kotlin文件的开头使用"),a("code",[s._v("@JvmName")]),s._v("注解来修改包含顶层函数的生成的类的名称。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("/* join.kt */")]),s._v("\n"),a("span",{attrs:{class:"token annotation builtin"}},[s._v("@file:JvmName")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"StringFunctions"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("// 生成的Java类不再是JoinKt，而是StringFunctions")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("package")]),s._v(" strings\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("fun")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("joinToString")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token operator"}},[s._v("..")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("..")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"顶层属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顶层属性","aria-hidden":"true"}},[s._v("#")]),s._v(" 顶层属性")]),s._v(" "),a("p",[s._v("和函数一样，属性也可以放在文件的顶层。")]),s._v(" "),a("p",[s._v("顶层属性和其他任何的属性一样，是通过访问器暴露给Java使用。"),a("code",[s._v("val")]),s._v("属性提供"),a("code",[s._v("getter")]),s._v("，"),a("code",[s._v("var")]),s._v("属性提供"),a("code",[s._v("getter")]),s._v("和"),a("code",[s._v("setter")]),s._v("。但注意，"),a("strong",[s._v("顶层属性的字段和访问器都是"),a("code",[s._v("static")]),s._v("的")]),s._v("。")]),s._v(" "),a("p",[s._v("可以使用"),a("code",[s._v("const val")]),s._v("来声明一个类似于Java的"),a("code",[s._v("public static final")]),s._v("的常量属性，而不提供"),a("code",[s._v("getter")]),s._v("。注意，"),a("code",[s._v("const")]),s._v("适用于所有的基本数据类型以及String类型。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("/* TopProp.kt */")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("val")]),s._v(" name "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"daking"')]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("var")]),s._v(" age "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("26")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("val")]),s._v(" UNIX_LINE_SEPARATOR "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"\\n"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("/* TopPropKt.java */")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{attrs:{class:"token class-name"}},[s._v("TopPropKt")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token annotation punctuation"}},[s._v("@NotNull")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("final")]),s._v(" String name "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"daking"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" age "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("26")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token annotation punctuation"}},[s._v("@NotNull")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("final")]),s._v(" String UNIX_LINE_SEPARATOR "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"\\n"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),a("span",{attrs:{class:"token annotation punctuation"}},[s._v("@NotNull")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("final")]),s._v(" String "),a("span",{attrs:{class:"token function"}},[s._v("getName")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" name"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n    "),a("span",{attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("getAge")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" age"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n    "),a("span",{attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("setAge")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("int")]),s._v(" var0"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        age "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" var0"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("h2",{attrs:{id:"扩展函数和属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展函数和属性","aria-hidden":"true"}},[s._v("#")]),s._v(" 扩展函数和属性")]),s._v(" "),a("h3",{attrs:{id:"扩展函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展函数","aria-hidden":"true"}},[s._v("#")]),s._v(" 扩展函数")]),s._v(" "),a("p",[s._v("可以为现有的类添加函数，这个函数叫做"),a("strong",[s._v("扩展函数")]),s._v("，而这个类被称为该扩展函数的"),a("strong",[s._v("接收者类型")]),s._v("，且用来调用这个扩展函数的那个对象叫作"),a("strong",[s._v("接收者对象")]),s._v("。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/15195673257351/15200690603146.jpg",alt:"扩展函数"}})]),s._v(" "),a("p",[s._v("在扩展函数中，可以使用"),a("code",[s._v("this")]),s._v("访问接收者对象（可省略"),a("code",[s._v("this")]),s._v("）。也可以直接访问接收者类型的其他方法和属性，但不能是私有或受保护的。")]),s._v(" "),a("p",[s._v("可以像调用类的普通成员函数那样去调用扩展函数。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("val")]),s._v(" c "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Kotlin"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("lastChar")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"导入扩展函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导入扩展函数","aria-hidden":"true"}},[s._v("#")]),s._v(" 导入扩展函数")]),s._v(" "),a("p",[s._v("扩展函数不会自动地在整个项目范围内生效，需要像其他任何的类或顶层函数一样"),a("code",[s._v("import")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("import")]),s._v(" strings"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lastChar\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("val")]),s._v(" c "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Kotlin"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("lastChar")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("可以使用关键字"),a("code",[s._v("as")]),s._v("来修改导入的类或者函数名称。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("import")]),s._v(" strings"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lastChar "),a("span",{attrs:{class:"token keyword"}},[s._v("as")]),s._v(" last\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("val")]),s._v(" c "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Kotlin"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("last")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"从java中调用扩展函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从java中调用扩展函数","aria-hidden":"true"}},[s._v("#")]),s._v(" 从Java中调用扩展函数")]),s._v(" "),a("p",[s._v("扩展函数其实也是一种顶层函数，它也会被编译成一个静态函数，而包含它的类名默认为Kotlin文件名。但扩展函数会把其接收者类型作为第一个参数。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("/* StringUtil.kt */")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("package")]),s._v(" strings\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("fun")]),s._v(" String"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("lastChar")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" Char "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("this")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("get")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("this")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),a("span",{attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("package")]),s._v(" strings"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{attrs:{class:"token class-name"}},[s._v("StringUtilKt")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("static")]),s._v(" Char "),a("span",{attrs:{class:"token function"}},[s._v("lastChar")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("String str"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" str"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("get")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),a("span",{attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("char")]),s._v(" c "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" StringUtilKt"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("lastChar")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"Java"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"扩展函数不可重写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展函数不可重写","aria-hidden":"true"}},[s._v("#")]),s._v(" 扩展函数不可重写")]),s._v(" "),a("p",[s._v("因为Kotlin会把扩展函数编译成静态函数，所以扩展函数不可以重写。")]),s._v(" "),a("p",[s._v("如果一个类的成员函数和扩展函数有相同的签名，成员函数往往会被优先使用。")]),s._v(" "),a("p",[s._v("可以给基类和子类都分别定义一个同名的扩展函数。当这个函数被调用时，是"),a("strong",[s._v("由变量的静态类型决定")]),s._v("调用基类还是子类的扩展函数，而不是由这个变量的运行时类型决定。")]),s._v(" "),a("h3",{attrs:{id:"扩展属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展属性","aria-hidden":"true"}},[s._v("#")]),s._v(" 扩展属性")]),s._v(" "),a("p",[s._v("可以为现有的类添加属性，这个属性叫做"),a("strong",[s._v("扩展属性")]),s._v("。")]),s._v(" "),a("p",[s._v("尽管它们被称为属性，但它们可以没有任何状态，因为没有合适的地方来存储它，不可能给现有的Java对象添加额外的字段。但有时候属性语法比函数语法更便于使用。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("var")]),s._v(" String"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lastChar"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" Char\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("get")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("this")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("get")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("this")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),a("span",{attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("set")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" Char"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("this")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("setCharAt")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("this")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),a("span",{attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("扩展属性是没有支持的字段，即没有任何的状态。这是因为没有合适的地方来存储状态值，这导致了：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("扩展属性没有默认的"),a("code",[s._v("getter")]),s._v("实现，必须自定义"),a("code",[s._v("getter")]),s._v("函数。")])]),s._v(" "),a("li",[a("p",[s._v("扩展属性不可以进行初始化。")])]),s._v(" "),a("li",[a("p",[s._v("扩展属性的"),a("code",[s._v("setter")]),s._v("要保存在接收者对象的其他字段上。")])])]),s._v(" "),a("p",[s._v("在Java中访问扩展属性，应该显式地调用它的"),a("code",[s._v("getter")]),s._v("或"),a("code",[s._v("setter")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("StringUtilKt"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("getLastChar")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"Java"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h1",{attrs:{id:"局部函数和扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#局部函数和扩展","aria-hidden":"true"}},[s._v("#")]),s._v(" 局部函数和扩展")]),s._v(" "),a("p",[s._v("局部函数是指在某个函数的内部定义的函数。例如，将验证代码封装成局部函数。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("User")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("val")]),s._v(" id"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" Int"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("val")]),s._v(" name"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("val")]),s._v(" address"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("fun")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("saveUser")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" User"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fun")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("validate")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fieldName"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("isEmpty")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("IllegalArgumentException")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v("\"Can't save user "),a("span",{attrs:{class:"token interpolation"}},[a("span",{attrs:{class:"token delimiter variable"}},[s._v("${")]),s._v("user"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),a("span",{attrs:{class:"token delimiter variable"}},[s._v("}")])]),s._v(': "')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v("\n                "),a("span",{attrs:{class:"token string"}},[s._v('"empty '),a("span",{attrs:{class:"token interpolation variable"}},[s._v("$fieldName")]),s._v('"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("// 局部函数可以访问外层函数")]),s._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n    "),a("span",{attrs:{class:"token function"}},[s._v("validate")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Name"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("validate")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("address"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Address"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    \n    "),a("span",{attrs:{class:"token comment"}},[s._v("// 验证成功进行保存")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("可以将局部函数放在扩展函数中。")]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("fun")]),s._v(" User"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("validateBeforeSave")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fun")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("validate")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fieldName"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" String"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("isEmpty")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("IllegalArgumentException")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v("\"Can't save user "),a("span",{attrs:{class:"token interpolation variable"}},[s._v("$id")]),s._v(': "')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v("\n                "),a("span",{attrs:{class:"token string"}},[s._v('"empty '),a("span",{attrs:{class:"token interpolation variable"}},[s._v("$fieldName")]),s._v('"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n    "),a("span",{attrs:{class:"token function"}},[s._v("validate")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Name"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("validate")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("address"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Address"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("fun")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("saveUser")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),a("span",{attrs:{class:"token operator"}},[s._v(":")]),s._v(" User"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("validateBeforeSave")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    \n    "),a("span",{attrs:{class:"token comment"}},[s._v("// 验证成功进行保存")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])])])}],!1,null,null,null);r.options.__file="函数的定义与调用.md";t.default=r.exports}}]);