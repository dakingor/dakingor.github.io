(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{209:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注解","aria-hidden":"true"}},[t._v("#")]),t._v(" 注解")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#应用注解"}},[t._v("应用注解")])]),s("li",[s("a",{attrs:{href:"#注解实参"}},[t._v("注解实参")])]),s("li",[s("a",{attrs:{href:"#注解目标"}},[t._v("注解目标")])]),s("li",[s("a",{attrs:{href:"#用注解控制java-api"}},[t._v("用注解控制Java API")])]),s("li",[s("a",{attrs:{href:"#声明注解"}},[t._v("声明注解")])]),s("li",[s("a",{attrs:{href:"#使用类做注解参数"}},[t._v("使用类做注解参数")])]),s("li",[s("a",{attrs:{href:"#元注解"}},[t._v("元注解")]),s("ul",[s("li",[s("a",{attrs:{href:"#target"}},[t._v("@Target")])]),s("li",[s("a",{attrs:{href:"#retention"}},[t._v("@Retention")])])])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"应用注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用注解","aria-hidden":"true"}},[t._v("#")]),t._v(" 应用注解")]),t._v(" "),s("p",[t._v("要应用一个注解，以@作为注解名的前缀，并放在要注解的声明的最前面。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" org"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" MyTest "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token annotation builtin"}},[t._v("@Test")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("testTrue")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Assert"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("assertTrue")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token boolean"}},[t._v("true")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("Kotlin允许对任意的表达式应用注解。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("test")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),s("span",{attrs:{class:"token operator"}},[t._v("*")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token annotation builtin"}},[t._v("@Suppress")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"UNCHECKED_CAST"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" strings "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" list "),s("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" List"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h2",{attrs:{id:"注解实参"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注解实参","aria-hidden":"true"}},[t._v("#")]),t._v(" 注解实参")]),t._v(" "),s("p",[t._v("注解只能拥有如下类型的参数：基本数据类型、字符串、枚举、类引用、其他的注解类和前面这些类型的数组形式。")]),t._v(" "),s("p",[t._v("Kotlin指定注解实参的语法与Java有一些差别，主要体现在：")]),t._v(" "),s("ul",[s("li",[t._v("要把一个类指定为注解实参，在类名后加上"),s("code",[t._v("::class")]),t._v("。")])]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{attrs:{class:"token annotation builtin"}},[t._v("@MyAnnotation")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyClass"),s("span",{attrs:{class:"token operator"}},[t._v("::")]),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("要把另一个注解指定为一个实参，去掉注解名称前面的"),s("code",[t._v("@")]),t._v("。如，在"),s("code",[t._v("@Deprecated")]),t._v("中使用ReplaceWith注解来提供一个替代者，以支持平滑地过渡到API的新版本。")])]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{attrs:{class:"token annotation builtin"}},[t._v("@Deprecated")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Use removeAt(index) instead"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("ReplaceWith")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"removeAt(index)"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("remove")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("..")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ul",[s("li",[t._v("要把一个数组指定为实参，使用"),s("code",[t._v("[]")]),t._v("或"),s("code",[t._v("arrayof()")]),t._v("。")])]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{attrs:{class:"token annotation builtin"}},[t._v("@RequestMapping")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token string"}},[t._v('"/foo"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"/bar"')]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("注解实参需要在编译期就是已知的。如，用const修饰符标记一个属性，来告知编译器这是一个编译器常量，可将它用作注解实参。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" TEST_TIMEOUT "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1000L")]),t._v("\n\n"),s("span",{attrs:{class:"token annotation builtin"}},[t._v("@Test")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeout "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" TEST_TIMEOUT"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("testMethod")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("..")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h2",{attrs:{id:"注解目标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注解目标","aria-hidden":"true"}},[t._v("#")]),t._v(" 注解目标")]),t._v(" "),s("p",[t._v("Kotlin代码中的单个声明往往会对应多个Java声明，而且每个Java声明都能携带注解，即一个Kotlin声明可能携带多个注解。")]),t._v(" "),s("p",[t._v("使用"),s("strong",[t._v("点目标")]),t._v("声明被用来说明要注解的元素。点目标位于"),s("code",[t._v("@")]),t._v("和注解名之间，并用冒号和注解名隔开。如，点目标get会使"),s("code",[t._v("@Rule")]),t._v("注解被应用到属性的getter上。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{attrs:{class:"token annotation builtin"}},[t._v("@get:Rule")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" email"),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),s("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("Kotlin支持的点目标如下：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("property —— Java注解不能应用这种点目标。")])]),t._v(" "),s("li",[s("p",[t._v("field —— 属性生成的字段。")])]),t._v(" "),s("li",[s("p",[t._v("get —— 属性的getter。")])]),t._v(" "),s("li",[s("p",[t._v("set —— 属性的setter。")])]),t._v(" "),s("li",[s("p",[t._v("receiver —— 扩展函数或扩展属性的接收者参数。")])]),t._v(" "),s("li",[s("p",[t._v("param —— 构造方法的参数。")])]),t._v(" "),s("li",[s("p",[t._v("setparam —— 属性的setter的参数。")])]),t._v(" "),s("li",[s("p",[t._v("delegate —— 委托属性存储委托实例的字段。")])]),t._v(" "),s("li",[s("p",[t._v("file —— 包含在文件中声明的顶层函数和属性的类。任何应用到file目标的注解都必须放在文件的顶层，放在package指令之前。")])])]),t._v(" "),s("h2",{attrs:{id:"用注解控制java-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用注解控制java-api","aria-hidden":"true"}},[t._v("#")]),t._v(" 用注解控制Java API")]),t._v(" "),s("p",[t._v("Kotlin提供了各种注解来控制Kotlin编写的声明如何编译成字节码并暴露给Java调用者，主要分为以下两种：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("代替Java语言中对应的关键字。比如，"),s("code",[t._v("@Volatile")]),t._v("代替volatile关键字；"),s("code",[t._v("@Strictfp")]),t._v("代替strictfp关键字。")])]),t._v(" "),s("li",[s("p",[t._v("用来改变Kotlin声明对Java调用者的可见性。如"),s("code",[t._v("@JvmName")]),t._v("、"),s("code",[t._v("@JvmStatic")]),t._v("、"),s("code",[t._v("@JvmOverloads")]),t._v("和"),s("code",[t._v("@JvmField")]),t._v("。")])])]),t._v(" "),s("p",[s("code",[t._v("@JvmName")]),t._v("会改变由Kotlin生成的Java方法或字段的名称。")]),t._v(" "),s("p",[s("code",[t._v("@JvmStatic")]),t._v("被用在对象声明或伴生对象的方法上，把它们暴露成Java的静态方法。")]),t._v(" "),s("p",[s("code",[t._v("@JvmOverloads")]),t._v("指导Kotlin编译器为带默认参数值的函数生成多个重载函数。")]),t._v(" "),s("p",[s("code",[t._v("@JvmField")]),t._v("可应用于一个属性，把这个属性暴露成一个没有访问器的公有Java字段。")]),t._v(" "),s("h2",{attrs:{id:"声明注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明注解","aria-hidden":"true"}},[t._v("#")]),t._v(" 声明注解")]),t._v(" "),s("p",[t._v("利用"),s("code",[t._v("annotation class")]),t._v("声明一个注解类。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("annotation")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" JsonExclude\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("编译器禁止为一个注解类指定类主体。对拥有参数的注解来说，要在类的主构造方法中声明这些参数。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("annotation")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("JsonName")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" name"),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("可以使用命名实参语法让注解实参的名称变成显式。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{attrs:{class:"token annotation builtin"}},[t._v("@JsonName")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"Xxx"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("因为name是JsonName构造方法的第一个形参，它的名称可以省略。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{attrs:{class:"token annotation builtin"}},[t._v("@JsonName")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Xxx"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("Java注解中往往有一个叫做value的方法，当为它指定注解实参时可省略名称，而对value以外的方法需要提供显式名称的实参。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" @"),s("span",{attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("JsonName")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    String "),s("span",{attrs:{class:"token function"}},[t._v("value")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{attrs:{class:"token annotation punctuation"}},[t._v("@JsonName")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Xxx"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"使用类做注解参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用类做注解参数","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用类做注解参数")]),t._v(" "),s("p",[t._v("KClass是Java的"),s("code",[t._v("java.lang.Class")]),t._v("类型在Kotlin中的对应类型，用来保存Kotlin类的引用。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("annotation")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("DeserializeInterface")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" targetClass"),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" KClass"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),s("span",{attrs:{class:"token keyword"}},[t._v("out")]),t._v(" Any"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("使用类名称后跟上"),s("code",[t._v("::class")]),t._v("关键字来引用一个类。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{attrs:{class:"token annotation builtin"}},[t._v("@DeserializeInterface")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Company"),s("span",{attrs:{class:"token operator"}},[t._v("::")]),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"元注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元注解","aria-hidden":"true"}},[t._v("#")]),t._v(" 元注解")]),t._v(" "),s("p",[t._v("可以应用到注解类上的注解被称作"),s("strong",[t._v("元注解")]),t._v("。")]),t._v(" "),s("p",[t._v("Kotlin标准库的"),s("code",[t._v("kotlin.annotation.Annotations.kt")]),t._v("定义了一些常用的元注解。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{attrs:{class:"token annotation builtin"}},[t._v("@Target")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AnnotationTarget"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ANNOTATION_CLASS"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token annotation builtin"}},[t._v("@MustBeDocumented")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("annotation")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Target")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("vararg")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" allowedTargets"),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" AnnotationTarget"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token annotation builtin"}},[t._v("@Target")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AnnotationTarget"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ANNOTATION_CLASS"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("annotation")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("Retention")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" value"),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" AnnotationRetention "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" AnnotationRetention"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RUNTIME"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token annotation builtin"}},[t._v("@Target")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AnnotationTarget"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ANNOTATION_CLASS"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("annotation")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Repeatable\n\n"),s("span",{attrs:{class:"token annotation builtin"}},[t._v("@Target")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AnnotationTarget"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ANNOTATION_CLASS"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("annotation")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" MustBeDocumented\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("h3",{attrs:{id:"target"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#target","aria-hidden":"true"}},[t._v("#")]),t._v(" @Target")]),t._v(" "),s("p",[t._v("可使用"),s("code",[t._v("@Target")]),t._v("来指定某个注解可以被应用的元素类型。如果不使用它，这个注解默认可被应用到所有的声明上。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// JsonExclude注解只能应用在属性上\n@Target(AnnotationTarget.PROPERTY)\nannotation class JsonExclude\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("AnnotationTarget枚举的值列出了可以应用注解的全部可能的目标，常用值如下：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("CLASS —— 类、接口、对象、注解类。")])]),t._v(" "),s("li",[s("p",[t._v("ANNOTATION_CLASS —— 注解类。")])]),t._v(" "),s("li",[s("p",[t._v("PROPERTY —— 属性。")])]),t._v(" "),s("li",[s("p",[t._v("PROPERTY_GETTER —— 属性的getter。")])]),t._v(" "),s("li",[s("p",[t._v("PROPERTY_SETTER —— 属性的setter。")])]),t._v(" "),s("li",[s("p",[t._v("FIELD —— 字段。")])]),t._v(" "),s("li",[s("p",[t._v("CONSTRUCTOR —— 主构造函数或二级构造函数。")])]),t._v(" "),s("li",[s("p",[t._v("FUNCTION —— 函数，不包含构造函数。")])]),t._v(" "),s("li",[s("p",[t._v("EXPRESSION —— 任意的表达式。")])])]),t._v(" "),s("p",[t._v("Target注解可以接受一个或多个AnnotationTarget值。")]),t._v(" "),s("p",[t._v("注意，在Java代码中无法使用目标为PROPERTY的注解，除非添加第二个目标FIELD。")]),t._v(" "),s("h3",{attrs:{id:"retention"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#retention","aria-hidden":"true"}},[t._v("#")]),t._v(" @Retention")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("@Retention")]),t._v("来指定某个注解是否会被存储到.class文件，以及在运行时是否可以通过反射来访问它。")]),t._v(" "),s("p",[t._v("Java默认会在.class文件中保留注解，但不会让它们在运行时被访问到。而Kotlin默认会在.class文件中保留注解，而且会让它们在运行时能被访问到。")]),t._v(" "),s("p",[s("code",[t._v("@Retention")]),t._v("接收一个AnnotationRetention枚举值来设置它的行为。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" AnnotationRetention "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/** Annotation isn't stored in binary output */")]),t._v("\n    SOURCE"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/** Annotation is stored in binary output, but invisible for reflection */")]),t._v("\n    BINARY"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/** Annotation is stored in binary output and visible for reflection (default retention) */")]),t._v("\n    RUNTIME\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])])])}],!1,null,null,null);e.options.__file="注解.md";a.default=e.exports}}]);